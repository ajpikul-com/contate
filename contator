function c_execute {
	dbg "Running $TMP_SCRIPT"
	SCRIPT_OUTPUT=""
	chmod +x "$TMP_SCRIPT"
	must "Failed to set +x on $TMP_SCRIPT"
	if [ "$IS_C" = true ]; then
		dbg "It is C"
		mv "$TMP_SCRIPT" "$TMP_SCRIPT".c
		must "Couldn't rename $TMP_SCRIPT for C"
		TMP_SCRIPT="$TMP_SCRIPT".c
	fi
	SCRIPT_OUTPUT="$($TMP_SCRIPT)"
	must "Script output failed"
	while IFS='' read -r scriptoutput2; do
		CONTATED_FILE+="$INDENTATION""$scriptoutput2"'\n'
	done <<< "$SCRIPT_OUTPUT"
	unset IS_C
}


def CONTATE_START_REGEX '^(.*)#!(?:/.+)+$'
def CONTATE_END_REGEX '^(?:\s*)!#(.*)$'
def CONTATE_INLINE '^.*#!($[{|\(].+[}|\)])!#.*$'
# 1- Target file - realpath is fine, are we being passed that? it's fine to set it
# 2- Output file- this needs to be a realpath + any directories that have been or need to be made
contate_file(){ 
	dbg "TARGET=$1"
	dbg "OUTPUT=$2"
	TARGET="$1"
	OUTPUT="$1"
	CONTATED_FILE=""
	IS_C=false
	while IFS='' read -r line || [[ -n "$line" ]]; do # if the EOF comes with no NL, second term helps
		# IN SCRIPT
		if [ -n "${TMP_SCRIPT}" ]; then
			# END BLOCK
			if [[ "$line" =~ $CONTATE_END_REGEX ]]; then
				dbg "END SCRIPT"
				c_execute # TODO what do with output?
				CONTATED_FILE="${CONTATED_FILE%'\n'}"
				CONTATED_FILE+="${BASH_REMATCH[1]}"'\n'
				unset TMP_SCRIPT
			else
				echo "${line#$INDENTATION}" >> "$TMP_SCRIPT"
			fi
		# Start Contate Block
		elif [[ "$line" =~ $CONTATE_START_REGEX ]] && [ $BASH_REMATCH[1] != "*#" ]; then
			dbg "START SCRIPT"
			if grep -qe "tcc -run" <<< "$line"; then
				IS_C=true
			fi
			# set filetype
			TMP_SCRIPT="$(mktemp)"
			echo ${line#${BASH_REMATCH[1]}} > "$TMP_SCRIPT"
			CONTATED_FILE+="${BASH_REMATCH[1]}"
			[[ "$line" =~ ^(\s*) ]]
			INDENTATION="${BASH_REMATCH[1]}"
		# Direct copy
		elif [[ "$line" =~ $CONTATE_INLINE ]];; then
			dbg "Inline replacement: ${BASH_REMATCH[1]}"
			INLINE_OUTPUT="$(eval "$BASH_REMATCH[1]")"
			must "$BASH_REMATCH[1] failed to be eval'ed"
			CONTATED_FILE="${line/"#!$BASH_REMATCH[1]!#"/$INLINE_OUTPUT}"'\n'
		else
			CONTATED_FILE+="$line"'\n'
		fi
	done < "$TARGET"
	if [ "$TMP_SCRIPT" != "" ]; then
		echo -ne "${CONTATED_FILE}" > "$2"
		dbg "WROTE SCRIPT"
	else
		err "Unexpected EOF in ${TARGET}"
		exit 1
	fi
}
